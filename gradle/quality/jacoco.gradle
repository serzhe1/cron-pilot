apply plugin: 'jacoco'

jacoco {
    toolVersion = '0.8.13'
    reportsDirectory.set(layout.buildDirectory.dir("reports/jacoco"))
}

tasks.withType(Test).configureEach {
    useJUnitPlatform()
    finalizedBy(tasks.named("jacocoTestReport"))
}

tasks.named("jacocoTestReport", JacocoReport).configure {
    dependsOn(tasks.named("test"))

    reports {
        xml.required.set(true)
        html.required.set(true)
        csv.required.set(false)
    }

    def javaClasses = fileTree(dir: "$rootProject.layout.buildDirectory/classes/java/main", exclude: [
            "**/generated/**", "**/config/**", "**/*Application*"
    ])
    classDirectories.setFrom(files(javaClasses))

    sourceDirectories.setFrom(files("$projectDir/src/main/java"))

    executionData.setFrom(fileTree(dir: rootProject.layout.buildDirectory, includes: [
            "jacoco/test.exec", "jacoco/*.exec", "outputs/unit_test_code_coverage/**/*.exec"
    ]))
}

tasks.named("jacocoTestCoverageVerification", JacocoCoverageVerification) {
    dependsOn(tasks.named("test"))
    violationRules {
        rule {
            limit {
                counter = 'INSTRUCTION'
                value = 'COVEREDRATIO'
                minimum = 0.70
            }
        }
    }
}
